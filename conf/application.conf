# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~
# Play uses HOCON as its configuration file format.  HOCON has a number
# of advantages over other config formats, but there are two things that
# can be used when modifying settings.
#
# You can include other configuration files in this main application.conf file:
#include "extra-config.conf"
#
# You can declare variables and substitute for them:
#mykey = ${some.value}
#
# And if an environment variable exists when there is no other subsitution, then
# HOCON will fall back to substituting environment variable:
#mykey = ${JAVA_HOME}

play.filters.disabled += play.filters.csrf.CSRFFilter
play.filters.disabled += play.filters.headers.SecurityHeadersFilter
play.filters.disabled += play.filters.hosts.AllowedHostsFilter

# Play Security filter settings
# ~~~~~
# The default Content Security Policy applied to all responses (unless overridden)
play.filters.headers.contentSecurityPolicy="default-src 'self';"

# Allow custom actions to override the above policy
play.filters.headers.allowActionSpecificHeaders=true

play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  allowed = ["."]
}

# Modules management
# ~~~~~
play {
  modules {
    enabled += "be.objectify.deadbolt.scala.DeadboltModule"
    enabled += "security.MyCustomDeadboltHook"
    enabled += "module.MyModule"
  }
}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.http.secret.key = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
slick.dbs {
  default {
    driver="slick.driver.PostgresDriver$"
    db.driver="org.postgresql.Driver"
    db.url="jdbc:postgresql://localhost:5432/myappdb?searchpath=public"
    db.user="postgres"
    db.password="postgres"
  }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

# Deadbolt
include "play-authenticate/deadbolt.conf"

# SMTP
include "play-authenticate/smtp.conf"

# Play authenticate plugin
include "play-authenticate/mine.conf"

# Google reCAPTCHA plugin
include "play-authenticate/recaptcha.conf"